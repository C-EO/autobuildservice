name: Etcher-arm64

on:
  workflow_dispatch:

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    name: Build-arm64 
    steps:
      - uses: actions/checkout@v2
      - uses: darsvador/run-on-arch-action@v1.0.10
        with:
          architecture: aarch64
          distribution: ubuntu20.04
          run: |
            export DEBIAN_FRONTEND=noninteractive 
            apt update
            apt install -y curl zip git python gcc nodejs npm g++ make libx11-dev libxkbfile-dev fakeroot rpm libsecret-1-dev jq python2.7-dev python3-pip python-setuptools libudev-dev ruby-dev
            git clone --recursive https://github.com/balena-io/etcher
            cd etcher
            git checkout $(git describe --abbrev=0 --tags)
            pip install -r requirements.txt
            sed -i 's/tiffutil/#tiffutil/g' Makefile 
            make electron-develop
            USE_SYSTEM_FPM="true" make electron-build
            echo "DEB=$(basename dist/balena-etcher-electron_${{ env.TAG }}_arm64.deb)" >> $GITHUB_ENV
            echo "RPM=$(basename dist/balena-etcher-electron-${{ env.TAG }}.aarch64.rpm)" >> $GITHUB_ENV
            echo "APPIMAGE=$(basename dist/balenaEtcher-${{ env.TAG }}-arm64.AppImage)" >> $GITHUB_ENV
            cd $DIR/
            DATE=$(date +"%F")
            mkdir etcher-arm64_$DATE/
            mv etcher/dist/$DEB etcher-arm64_$DATE/
            mv etcher/dist/$RPM etcher-arm64_$DATE/
            mv etcher/dist/$APPIMAGE etcher-arm64_$DATE/
            zip -r etcher.zip etcher-arm64_$DATE/
            curl --upload-file etcher.zip http://transfer.sh/
          
            
